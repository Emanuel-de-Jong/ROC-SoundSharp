//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AudioDevices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SoundSharpDBEntities : DbContext
    {
        public SoundSharpDBEntities()
            : base("name=SoundSharpDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AudioDevice> AudioDevice { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<CdDiskMan> CdDiskMan { get; set; }
        public virtual DbSet<MemoRecorder> MemoRecorder { get; set; }
        public virtual DbSet<Mp3Player> Mp3Player { get; set; }
        public virtual DbSet<Track> Track { get; set; }
        public virtual DbSet<TrackList> TrackList { get; set; }
    
        public virtual int spAddTrackToList(Nullable<int> tRACKID, Nullable<int> tRACKLISTID)
        {
            var tRACKIDParameter = tRACKID.HasValue ?
                new ObjectParameter("TRACKID", tRACKID) :
                new ObjectParameter("TRACKID", typeof(int));
    
            var tRACKLISTIDParameter = tRACKLISTID.HasValue ?
                new ObjectParameter("TRACKLISTID", tRACKLISTID) :
                new ObjectParameter("TRACKLISTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddTrackToList", tRACKIDParameter, tRACKLISTIDParameter);
        }
    
        public virtual int spEditeTrackList(Nullable<int> tRACKID, Nullable<int> tRACKLISTID)
        {
            var tRACKIDParameter = tRACKID.HasValue ?
                new ObjectParameter("TRACKID", tRACKID) :
                new ObjectParameter("TRACKID", typeof(int));
    
            var tRACKLISTIDParameter = tRACKLISTID.HasValue ?
                new ObjectParameter("TRACKLISTID", tRACKLISTID) :
                new ObjectParameter("TRACKLISTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditeTrackList", tRACKIDParameter, tRACKLISTIDParameter);
        }
    
        public virtual int spDeleteTrack(Nullable<int> tRACKID, Nullable<int> tRACKLISTID)
        {
            var tRACKIDParameter = tRACKID.HasValue ?
                new ObjectParameter("TRACKID", tRACKID) :
                new ObjectParameter("TRACKID", typeof(int));
    
            var tRACKLISTIDParameter = tRACKLISTID.HasValue ?
                new ObjectParameter("TRACKLISTID", tRACKLISTID) :
                new ObjectParameter("TRACKLISTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteTrack", tRACKIDParameter, tRACKLISTIDParameter);
        }
    
        public virtual int spDeleteTrackFromTracklist(Nullable<int> tRACKLISTID)
        {
            var tRACKLISTIDParameter = tRACKLISTID.HasValue ?
                new ObjectParameter("TRACKLISTID", tRACKLISTID) :
                new ObjectParameter("TRACKLISTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteTrackFromTracklist", tRACKLISTIDParameter);
        }
    }
}
